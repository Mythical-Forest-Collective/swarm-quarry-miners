assert(fs.exists("disk"),"Please attach a disk drive to install files to!")

local copyfiles = {
	"relgo",
	"config",
	"miner",
	"json",
	"swarm"
}

local blacklist = {
	{name="minecraft:cobblestone"},
	{name="minecraft:stone"},
	{name="minecraft:sandstone"},
	{name="minecraft:grass"},
	{name="minecraft:tallgrass"},
	{name="minecraft:dirt"},
	{name="minecraft:gravel"},
	{name="minecraft:sand"},
	{name="minecraft:bedrock"},
	{name="minecraft:snow_layer"},
	{name="minecraft:ice"},
	{name="ProjRed|Exploration:projectred.exploration.stone",metadata=0},
	{name="chisel:limestone"},
	{name="chisel:chisel.limestone"},
	{name="chisel:marble"},
	{name="chisel:chisel.marble"},
	{name="chisel:diorite"},
	{name="chisel:granite"},
	{name="chisel:andesite"},
	{name="Railcraft:cube",metadata=7}
}

local liquidfuels = {
	lava = {name="minecraft:flowing_lava",metadata=0}
}

for i,v in ipairs(copyfiles) do
	assert(fs.exists("nodequarry/"..v),"Missing required file: "..v.. " - please redownload the setup.")
end

local deploy_code = [[
assert(turtle, "This disk is to deploy turtle swarm miners!")
print("Deploy this turtle as miner? [Y/N]")
local _,key = os.pullEvent("char")
if key == "y" then
	print("Copying files...")
	fs.copy("disk/relgo","relgo")
	fs.copy("disk/config","config")
	fs.copy("disk/miner","miner")
	fs.copy("disk/json","json")
	fs.copy("disk/swarm","swarm")
	fs.copy("disk/.swarmconfig",".swarmconfig")
	local f = fs.open("startup","w")
	f.write("shell.run('swarm')")
	f.close()
	print("Installation complete; starting miner")
	shell.run("swarm")
end
]]

os.loadAPI(".sq/config")
os.loadAPI(".sq/json")
if fs.exists("disk/.swarmconfig") then fs.delete("disk/.swarmconfig") end
config.init("disk/.swarmconfig")
term.clear()
term.setCursorPos(1,1)
print("Please enter the address of the host server below.")
write("> ")
local host = read()
if not host:match("^http:\\/\\/") then host = "http://" .. host end
config.set("host", host)
if not http.get(host) then
	print("Hmm, I can't reach the server.")
	print("Are you sure you set it up correctly and it is running?")
	error()
end

print("What should the name of the swarm be?")
write("> ")
local name = read()
config.set("swarmname", name)
print("How wide should the quarry be, in blocks?")
write("> ")
local width = tonumber(read()) or 8
print("How long should the quarry be, in blocks?")
write("> ")
local length = tonumber(read()) or 8
print("How much extra fuel should turtles keep when getting fuel?")
print("The higher the number, the more efficient the fuel usage, but higher fuel requirements. Defaults to 256 + width + length.")
write("> ")
local fuelbuffer = tonumber(read()) or (256 + width + length)
config.set("fuelbuffer", fuelbuffer)
config.set("fuelspare", 25)
print("Should the turtles attempt to refuel when they find lava?")
print("Requires each to have an empty bucket.")
write("[Y/N] > ")
while true do
	local _,key = os.pullEvent("char")
	if key == "y" then
		config.set("lavarefuel", true)
		break
	elseif key == "n" then
		config.set("lavarefuel", false)
		break
	end
end


print("\nContacting server...")
local handle = http.get(host .. "/swarm/" .. name .. "/create?width=" .. width .. "&length=" .. length)
if handle then
	local response = json.decode(handle.readAll())
	if response.success then
		print("Success!")
		print(response.shafts .. " shafts will be mined.")
		for i,v in ipairs(copyfiles) do
			if fs.exists("disk/"..v) then
				fs.delete("disk/"..v)
			end
			fs.copy("nodequarry/"..v,"disk/"..v)
		end
		config.set("width", width)
		config.set("height", height)
		config.set("dropoff",{x=0, y=0, z=-3, f=2})
		config.set("block_blacklist",blacklist)
		config.set("liquidfuels",liquidfuels)
		config.set("autoname",true)
		config.set("travelSleepTime",3)
		config.set("shaft_z_offset", 2)
		if fs.exists("disk/startup") then fs.delete("disk/startup") end
		local f = fs.open("disk/startup", "w")
		f.write(deploy_code)
		f.close()
		print("Setup complete! Ready to deploy miners!")
	else
		print("Oh no!")
		print("An error occurred!")
		print("Error: " .. response.error)
	end
else
	print("Hmm, I can't reach the server.")
	print("Are you sure you set it up correctly and it is running?")
end
